/*
    fs异步处理机制注意事项：
        1.fs异步处理没有返回结果
        2.处理结果均是在回调函数中处理的
        3.异步处理出错不会影响到其他流程的执行（非阻塞）

    fs文件系统常用标志：
        r：读取文件，文件不存在则出现异常
        r+：读写文件，文件不存在则出现异常
        rs：在同步模式下打开文件用于读取
        rs+：在同步模式下打开文件用于读写
        w：打开文件，用于写操作，如果不存在则创建，存在则截断
        wx：打开文件用于写操作，如果存在则打开失败
        w+：打开文件用于读写操作，如果不存在则创建，存在则截断
        wx+：打开文件用于读写，如果存在则打开失败
        a：打开文件用于追加，不存在则创建   （a:append）
        ax：打开文件用于追加，如果路径存在则失败
        a+：打开文件进行读取和追加，如果不存在，则创建文件该文件
        ax+：打开文件用于读取和追加，如果路径存在，则失败
*/

//1.导入fs核心模块
let fs = require("fs");

//打开文件   (必须有回调函数，fd即为打开的文件)
fs.open("test.txt","w",(err,fd) => {
    console.log("我是异步操作");
    if(!err){
        console.log("文件打开成功");
        //写入文件
        fs.writeFile(fd,"我是node异步处理写入数据操作",(err) => {
            if(!err){
                console.log("数据写入成功");
            }else {
                throw err;
            }
            //保存并关闭
            fs.close(fd,(err) => {
                if(!err){
                    console.log("文件保存并关闭了");
                }
            })

        })
    }else{
        throw err;    //抛出异常
    }

})

console.log("哈哈哈哈");